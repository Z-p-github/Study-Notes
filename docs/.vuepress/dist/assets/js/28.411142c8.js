(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{522:function(s,t,a){"use strict";a.r(t);var n=a(65),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("今天我们来看看什么是二进制以及什么是位运算")]),s._v(" "),a("h2",{attrs:{id:"二进制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制"}},[s._v("#")]),s._v(" 二进制")]),s._v(" "),a("ul",[a("li",[s._v("计算机使用二进制来存储数字")]),s._v(" "),a("li",[s._v("为了简化运算，二进制数都是用一个字节(8 个二进制位)来简化说明")])]),s._v(" "),a("h3",{attrs:{id:"真值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#真值"}},[s._v("#")]),s._v(" 真值")]),s._v(" "),a("ul",[a("li",[s._v("8 位二进制数能表示的真值范围是[-2^8,+2^8]")])]),s._v(" "),a("p",[s._v("真值就是带符号位的机器数对应的真正数值，个人理解就是用正负号来代替符号位来表示机器数\n例如：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("000000001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//-1")]),s._v("\n")])])]),a("h3",{attrs:{id:"原码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原码"}},[s._v("#")]),s._v(" 原码")]),s._v(" "),a("ul",[a("li",[s._v("由于计算机只能存储 0 和 1，不能存储正负")]),s._v(" "),a("li",[s._v("所以用 8 个二进制位的最高位来表示符号，0 表示正，1 表示负，用后七位表示真值的绝对值")]),s._v(" "),a("li",[s._v("这种表示方法称为原码表示法，简称原码")]),s._v(" "),a("li",[s._v("由于 10000000 的意思是-0，这个就没有意义，所以这个数子用来表示-128")]),s._v(" "),a("li",[s._v("由于最高位用来表示符号位了，现在能表示的范围是[-2^7,+2^7-1]，即[-128,+127]")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//-1")]),s._v("\n")])])]),a("h3",{attrs:{id:"反码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反码"}},[s._v("#")]),s._v(" 反码")]),s._v(" "),a("ul",[a("li",[s._v("反码是另外一种表示数字的方法")]),s._v(" "),a("li",[s._v("其规则就是正数的反码和他的原码一样")]),s._v(" "),a("li",[s._v("负数的反码是将其原码的符号位不变，其余各位按位取反")]),s._v(" "),a("li",[s._v("反码的表示范围是[-2^7,+2^7-1]，即[-128,+127]")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111110")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//-1")]),s._v("\n")])])]),a("h3",{attrs:{id:"补码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补码"}},[s._v("#")]),s._v(" 补码")]),s._v(" "),a("ul",[a("li",[s._v("补码是为了简化运算，将减法变为加法而发明的数字表示法")]),s._v(" "),a("li",[s._v("其规则是正数的补码和原码一样，负数的补码是反码末尾加 1")]),s._v(" "),a("li",[s._v("8 位补码表示的范围是 [-2^7,+2^7-1]，即[-128,+127]")]),s._v(" "),a("li",[s._v("快速计算负数补码的规则是，由其原码低位向高位找到第一个 1，1 和其低位不变，1 前面的高位按位取反即可")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//+1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//-1")]),s._v("\n")])])]),a("h3",{attrs:{id:"为何需要使用反码和补码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为何需要使用反码和补码"}},[s._v("#")]),s._v(" 为何需要使用反码和补码")]),s._v(" "),a("p",[s._v("使用原码进行计算的时候，对于人而言能够很轻易的辨别出符号位，然后直接对其他位数值进行计算。然而对于计算机的设计而言辨别出符号位就是一项非常复杂的工程，所以设计的时候就考虑让符号位直接参与计算，这样设计计算机就十分简单了。 对于加法而言符号位对于计算并没有影响，对于减法而言则考虑通过加上负数来转换为加法的方式进行计算。 如果通过原码来直接进行减法计算：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0011")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0010")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0101")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n")])])]),a("p",[s._v("结果显而易见，如果通过原码来直接让符号位参与运算的话是不正确的，所以为了解决减法的问题引入了反码的概念。如果通过反码来进行减法计算：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0011")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0010")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0011")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 最高位产生进位，结果"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("p",[s._v("结果正确，从上面例子看来如果通过反码进行减法运算的话是没有问题的，那为什么又需要补码呢，我们一起来看下面这个特殊的例子：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0010")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0010")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0010")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),a("p",[s._v("由于对于 0 这个数字而言，正负号没有任何意义，但是经过计算却有可能出现[0000 0000]和[1000 0000]这两种不同的原码表示同一个数字 0，这显然是不合理的，所以此时就引入了补码的概念。 如果通过补码来进行上述例子的计算：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0010")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0010")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0010")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0010")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1110")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 最高位产生进位，进位舍弃\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),a("p",[s._v("由上述例子可以看出，补码完美的解决了 0 的符号问题以及 0 有两个不同原码表示的问题。而且[10000 0000]也可以用来表示-128：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("原"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1110")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("反"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("最高位产生进位，进位舍弃\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("补"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("-1 - 127 的结果为-128，上面例子中-1 和-127 补码相加后得出的补码也是-128。但是这个 1000 0000(补)实际上对应的是之前的-0，所以这个补码是没有反码和原码的。 综上可以看出使用补码的话不仅 0 的符号问题和多原码问题可以解决，还可以多表示一个最小数。因此对于 1 字节而言，原码和反码的范围是[-127, 127]，而补码的范围是[-128, 127]，也可以解释 java 中 int 的范围是[-2, 2-1]。")]),s._v(" "),a("h2",{attrs:{id:"位运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[s._v("#")]),s._v(" 位运算符")]),s._v(" "),a("p",[s._v("在位运算的过程中，会涉及到很多位运算符的使用，下面我们来看看这些运算符代表的是什么意思")]),s._v(" "),a("ul",[a("li",[s._v("按位与(&)\n"),a("blockquote",[a("p",[s._v("使用方式 x & y 每一个比特位都为 1 时，结果为 1，否则为 0")])])]),s._v(" "),a("li",[s._v("按位或(｜)\n"),a("blockquote",[a("p",[s._v("使用方式 x ｜ y 每一个比特位都为 0 时，结果为 0，否则为 1")])])]),s._v(" "),a("li",[s._v("按位异或(^)\n"),a("blockquote",[a("p",[s._v("使用方式 x^y 每一个比特位相同结果为 0，不相同结果为 1")])])]),s._v(" "),a("li",[s._v("按位非(~)\n"),a("blockquote",[a("p",[s._v("使用方式 ~x 对每一个比特位取反，0 变成 1，1 变成 0")])])]),s._v(" "),a("li",[s._v("左移(<<)\n"),a("blockquote",[a("p",[s._v("使用方式 x << y 将 x 的每一个比特为左移 y 位，右侧补充 0")])])]),s._v(" "),a("li",[s._v("有符号右移(>>)\n"),a("blockquote",[a("p",[s._v("使用方式 x >> y 将 x 的每一个比特为向右移动 y 个位，右侧移除位丢弃，左侧填充为最高位")])])]),s._v(" "),a("li",[s._v("无符号右移(>>>)\n"),a("blockquote",[a("p",[s._v("使用方式 x >>> y 将 x 的每一个比特为向右移动 y 个位，右侧移除位丢弃，左侧填充为 0")])])])]),s._v(" "),a("p",[s._v("下面我们来具体的来演示一下这几种运算符的作用和功能：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我们申明两个二进制数，0b开头，表示这是一个二进制的数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0b100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0b011")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//按位与(&)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0b000")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//按位或(｜)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 7")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0b111")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//按位异或(^)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 7")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0b111")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//按位非(~),按位非运算时，任何数字x的运算结果都是  -(x+1)，例如，~4 的结果是 -5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" g "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -4")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("g"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0b100")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//左移(<<) , b之前是011，左移动了两位之后的二进制是 1100，对应十进制 12")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" h "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 12")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0b1100")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//有符号右移(>>), b之前是011，右移动了两位之后的二进制是 000，对应十进制 0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0b0000")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//无符号右移(>>>), b之前是011，右移动了两位之后的二进制是 000，对应十进制 0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0b0000")]),s._v("\n")])])]),a("h3",{attrs:{id:"无符号和有符号右移的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无符号和有符号右移的区别"}},[s._v("#")]),s._v(" 无符号和有符号右移的区别")]),s._v(" "),a("p",[s._v("我们知道，计算机中以二进制存储数字，二进制中最左边的第一位，叫符号位，所以这就很明显了，右移 2 位后，最左边缺少 2 位数字，那就应该填充数字，那填充什么呢？")]),s._v(" "),a("p",[s._v("符号位是什么，我就填什么，所以 -4 >> 2 中最左边 2 位和符号位一样，都是 1。")]),s._v(" "),a("p",[s._v("因此所说的 有符号、无符号 看的就是二进制的符号位， 无符号:就不管符号位，右移只填充 0；有符号，就是符号位是啥，我就填充啥")]),s._v(" "),a("p",[s._v("负数进行无符号右移会变成正数，整数和有符号右移没有区别")])])}),[],!1,null,null,null);t.default=r.exports}}]);